"""
#    test my own function showmesh()
#    -------------------------------------------------------
#
#    1. we first get the mesh generated by layer.jl 
#    2. we use the gmsh api to get the information in script 
#       not reading information from layer.msh 
#    3. we use showmesh to plot the triangulation
"""

using gmsh_jll
using Plots
include(gmsh_jll.gmsh_api)

"""
write a description of SimpleMesh
"""
struct SimpleMesh
    P::Matrix{Float64}
    T::Matrix{Int64}
end

"""

"""
function showmesh(mesh::SimpleMesh)
    np = size(mesh.P, 2)
    nt = size(mesh.T, 2)

    # loop in elements
    for k in 1:nt
        display(plot!(mesh.P[2, [mesh.T[1,k], mesh.T[2,k]]], mesh.P[3, [mesh.T[1,k], mesh.T[2,k]]], grid=:false, lc=:black, legend=:false, showaxis=:false))
        display(plot!(mesh.P[2, [mesh.T[2,k], mesh.T[3,k]]], mesh.P[3, [mesh.T[2,k], mesh.T[3,k]]], grid=:false, lc=:black, legend=:false, showaxis=:false))
        display(plot!(mesh.P[2, [mesh.T[3,k], mesh.T[1,k]]], mesh.P[3, [mesh.T[3,k], mesh.T[1,k]]], grid=:false, lc=:black, legend=:false, showaxis=:false))
    end
end

gmsh.initialize()

gmsh.model.add("layer")
lc = 0.5

# define the geomety
gmsh.model.geo.addPoint(0, 0, 0, lc, 1)
gmsh.model.geo.addPoint(2*pi, 0, 0, lc, 2)
gmsh.model.geo.addPoint(2*pi, pi, 0, lc, 3)
gmsh.model.geo.addPoint(0, pi, 0, lc, 4)

gmsh.model.geo.addLine(4, 1, 1)
gmsh.model.geo.addLine(1, 2, 2)
gmsh.model.geo.addLine(2, 3, 3)
gmsh.model.geo.addLine(3, 4, 4)

gmsh.model.geo.addCurveLoop([1, 2, 3, 4],1)

gmsh.model.geo.addPlaneSurface([1], 1)

gmsh.model.geo.synchronize()
gmsh.model.mesh.generate(2)

# extract mesh information from gmsh
"""
we may need the following apis in gmsh.jl

gmsh.model.mesh.getNodes(dim, tag, boundary, paramet)
gmsh.model.mesh.getElements(dim , tag)
"""

ndTags, ndCoord = gmsh.model.mesh.getNodes(-1, -1, false, false)
elType, elTags, ndInEl = gmsh.model.mesh.getElements(2, -1)

gmsh.finalize()

P = cat(convert(Vector{Int64},ndTags)',reshape(ndCoord,3,:),dims=1)
P = P[:,sortperm(P[1,:])]
T = reshape(convert(Vector{Int64}, reduce(vcat, ndInEl)),3,:)
layer = SimpleMesh(P, T)

showmesh(layer)